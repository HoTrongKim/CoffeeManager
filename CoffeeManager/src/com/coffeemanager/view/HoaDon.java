/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.coffeemanager.view;

import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.util.Locale;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Yuu
 */
public class HoaDon extends javax.swing.JFrame {

    /**
     * Creates new form HoaDon
     */
    public HoaDon() {
        initComponents();
        loadSanPhamVaoChoice();
        setupTableSelectionListener();
        makeTableReadOnlyWithFormattedPrice(tbl_DSSanPham, 1); // Cột giá tiền là cột 1
        makeTableReadOnlyWithFormattedPrice(tbl_ChiTietHoaDon, 1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0));
        jPanel1 = new javax.swing.JPanel();
        btn_ThanhToan = new javax.swing.JButton();
        txt_TongTienHoaDon = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbl_ChiTietHoaDon = new javax.swing.JTable();
        btn_xoa = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        choice_SanPhamVaGiaTien = new java.awt.Choice();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_DSSanPham = new javax.swing.JTable();
        btn_themSPVaoHoaDon = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel5.setText("HÓA ĐƠN");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true)));

        btn_ThanhToan.setText("Thanh Toán");
        btn_ThanhToan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_ThanhToan.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_ThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThanhToanActionPerformed(evt);
            }
        });

        txt_TongTienHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_TongTienHoaDonActionPerformed(evt);
            }
        });

        jLabel3.setText("Thành Tiền");

        jLabel2.setText("Chi Tiết Hóa Đơn");

        tbl_ChiTietHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên Sản Phẩm", "Giá Tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tbl_ChiTietHoaDon);

        btn_xoa.setText("Xóa");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_TongTienHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_xoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_ThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_TongTienHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_ThanhToan)
                    .addComponent(btn_xoa))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Danh Sách Sản Phẩm");

        tbl_DSSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Coffee kem muối",  new Double(25000.0)},
                {"Trà sữa dở vc",  new Double(27500.0)},
                {"Matcha latte",  new Double(30000.0)}
            },
            new String [] {
                "Tên Sản Phẩm", "Giá Tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbl_DSSanPham);

        btn_themSPVaoHoaDon.setText("Thêm Sản Phẩm Vào Hóa Đơn");
        btn_themSPVaoHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_themSPVaoHoaDonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addComponent(choice_SanPhamVaGiaTien, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(50, 50, 50)
                            .addComponent(btn_themSPVaoHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_themSPVaoHoaDon)
                    .addComponent(choice_SanPhamVaGiaTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(394, 394, 394)
                        .addComponent(jLabel5)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void makeTableReadOnlyWithFormattedPrice(JTable table, int priceColumnIndex) {
        DefaultTableModel oldModel = (DefaultTableModel) table.getModel();
        DefaultTableModel newModel = new DefaultTableModel(oldModel.getDataVector(), getColumnNames(table)) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Không cho sửa
            }

            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return columnIndex == priceColumnIndex ? Double.class : String.class;
            }
        };
        table.setModel(newModel);

        // Format cột giá tiền
        TableColumn col = table.getColumnModel().getColumn(priceColumnIndex);
        col.setCellRenderer(new DefaultTableCellRenderer() {
            DecimalFormat df = new DecimalFormat("#,###", new DecimalFormatSymbols(new Locale("vi", "VN")));

            @Override
            public void setValue(Object value) {
                if (value instanceof Number) {
                    setText(df.format(value) + " VNĐ");
                } else {
                    super.setValue(value);
                }
            }
        });
    }

    private Vector<String> getColumnNames(JTable table) {
        Vector<String> columnNames = new Vector<>();
        for (int i = 0; i < table.getColumnCount(); i++) {
            columnNames.add(table.getColumnName(i));
        }
        return columnNames;
    }

    private void setupTableSelectionListener() {
        tbl_DSSanPham.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = tbl_DSSanPham.getSelectedRow();
                    if (selectedRow >= 0) {
                        Object tenSPObj = tbl_DSSanPham.getValueAt(selectedRow, 0);
                        Object giaTienObj = tbl_DSSanPham.getValueAt(selectedRow, 1);

                        if (tenSPObj != null && giaTienObj != null) {
                            String tenSP = tenSPObj.toString();
                            double giaTien = (double) giaTienObj;
                            String item = tenSP + " - " + String.format("%.0f", giaTien) + " VNĐ";

                            // Duyệt qua Choice và chọn mục tương ứng
                            for (int i = 0; i < choice_SanPhamVaGiaTien.getItemCount(); i++) {
                                if (choice_SanPhamVaGiaTien.getItem(i).equals(item)) {
                                    choice_SanPhamVaGiaTien.select(i);
                                    break;
                                }
                            }
                        }
                    }
                }
            }
        });
    }

    private void loadSanPhamVaoChoice() {
        choice_SanPhamVaGiaTien.removeAll(); // Xóa dữ liệu cũ nếu có

        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tbl_DSSanPham.getModel();
        int rowCount = model.getRowCount();

        for (int i = 0; i < rowCount; i++) {
            Object tenSPObj = model.getValueAt(i, 0);
            Object giaTienObj = model.getValueAt(i, 1);

            // Bỏ qua nếu dữ liệu null
            if (tenSPObj == null || giaTienObj == null) {
                continue;
            }

            String tenSP = tenSPObj.toString();
            double giaTien = (double) giaTienObj;

            String item = tenSP + " - " + String.format("%.0f", giaTien) + " VNĐ";
            choice_SanPhamVaGiaTien.add(item);
        }
    }


    private void btn_themSPVaoHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_themSPVaoHoaDonActionPerformed
        // Lấy chuỗi được chọn từ choice
        String selectedItem = choice_SanPhamVaGiaTien.getSelectedItem(); // Ví dụ: "Cà phê đen - 25000 VNĐ"

        // Kiểm tra null hoặc chuỗi rỗng
        if (selectedItem == null || selectedItem.trim().isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm từ danh sách thả xuống!");
            return;
        }

        // Tách chuỗi để lấy tên và giá
        String[] parts = selectedItem.split(" - ");
        if (parts.length < 2) {
            javax.swing.JOptionPane.showMessageDialog(this, "Định dạng dữ liệu sản phẩm không hợp lệ!");
            return;
        }

        String tenSP = parts[0];
        double giaTien = Double.parseDouble(parts[1].replace(" VNĐ", "").replace(".", "").trim());

        // Thêm vào bảng chi tiết hóa đơn
        javax.swing.table.DefaultTableModel modelChiTiet = (javax.swing.table.DefaultTableModel) tbl_ChiTietHoaDon.getModel();
        modelChiTiet.addRow(new Object[]{tenSP, giaTien});

        // Cập nhật tổng tiền
        double tongTien = 0.0;
        for (int i = 0; i < modelChiTiet.getRowCount(); i++) {
            tongTien += (double) modelChiTiet.getValueAt(i, 1);
        }

        // Format VNĐ theo chuẩn Việt Nam
        DecimalFormatSymbols symbols = new DecimalFormatSymbols(new Locale("vi", "VN"));
        symbols.setDecimalSeparator(',');
        symbols.setGroupingSeparator('.');
        DecimalFormat formatter = new DecimalFormat("#,###", symbols);

        txt_TongTienHoaDon.setText(formatter.format(tongTien) + " VNĐ");
    }//GEN-LAST:event_btn_themSPVaoHoaDonActionPerformed

    private void btn_ThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ThanhToanActionPerformed
        DefaultTableModel modelChiTiet = (DefaultTableModel) tbl_ChiTietHoaDon.getModel();

// Kiểm tra bảng có dữ liệu không
        if (modelChiTiet.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Thanh toán không thành công! Chi tiết hóa đơn đang rỗng.");
        } else {
            // Lấy tổng tiền từ ô text (giả sử đúng định dạng số)
            String tongTienStr = txt_TongTienHoaDon.getText().replaceAll("[^\\d]", ""); // bỏ ký tự không phải số
            double tongTien = 0;
            try {
                tongTien = Double.parseDouble(tongTienStr);
            } catch (NumberFormatException ex) {
                tongTien = 0;
            }

            // Định dạng tiền VNĐ
            DecimalFormat df = new DecimalFormat("#,###.##");
            String tongTienFormatted = df.format(tongTien) + " VNĐ";

            // Thông báo thành công
            JOptionPane.showMessageDialog(this, "Thanh toán thành công! Tổng tiền: " + tongTienFormatted);

            // Xóa các dòng trong bảng chi tiết hóa đơn
            modelChiTiet.setRowCount(0);

            // Đặt lại tổng tiền
            txt_TongTienHoaDon.setText("0");
        }
    }//GEN-LAST:event_btn_ThanhToanActionPerformed

    private void txt_TongTienHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_TongTienHoaDonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_TongTienHoaDonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HoaDon().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_ThanhToan;
    private javax.swing.JButton btn_themSPVaoHoaDon;
    private javax.swing.JButton btn_xoa;
    private java.awt.Choice choice_SanPhamVaGiaTien;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tbl_ChiTietHoaDon;
    private javax.swing.JTable tbl_DSSanPham;
    private javax.swing.JTextField txt_TongTienHoaDon;
    // End of variables declaration//GEN-END:variables

}

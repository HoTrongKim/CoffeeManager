package com.coffeemanager.view;

import com.coffeemanager.model.Luong;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class BangLuong extends javax.swing.JFrame {

    public BangLuong() {
        initComponents();
        cbboxLuong.setEnabled(false);
        cbboxLuong.setVisible(false);
        lblLuong.setVisible(false);

        DefaultTableModel model = new DefaultTableModel(
                new Object[]{"MaNV", "Họ Tên", "Chức vụ", "Giờ làm", "Số Ca", "Lương cơ bản", "Thực nhận"}, 0
        );
        tbl_BangLuong.setModel(model);

        loadData();
    }

    private String formatCurrency(double amount) {
        java.text.NumberFormat formatter = java.text.NumberFormat.getCurrencyInstance(new java.util.Locale("vi", "VN"));
        return formatter.format(amount);
    }

    private Connection connect() throws SQLException {
        return DriverManager.getConnection("jdbc:sqlite:CoffeeManager.db");
    }

    private void loadData() {
        DefaultTableModel model = (DefaultTableModel) tbl_BangLuong.getModel();
        model.setRowCount(0);

        String sql = "SELECT * FROM Luong";
        try (Connection conn = connect(); Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(sql)) {
            while (rs.next()) {
                String maNV = rs.getString("maNV");
                String hoTen = rs.getString("hoTen");
                String chucVu = rs.getString("chucVu");
                double tongGio = rs.getDouble("tongGio");
                double soCa = rs.getDouble("soCa");
                double luongCoBan = rs.getDouble("luongCoBan");
                double thucNhan = rs.getDouble("thucNhan");

                model.addRow(new Object[]{
                    maNV,
                    hoTen,
                    chucVu,
                    tongGio,
                    soCa,
                    formatCurrency(luongCoBan),
                    formatCurrency(thucNhan)
                });
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi tải dữ liệu: " + e.getMessage());
        }
    }

    private boolean addLuong(Luong luong) {
        String sql = "INSERT INTO Luong (maNV, hoTen, chucVu, tongGio, soCa, luongCoBan, thucNhan) VALUES (?, ?, ?, ?, ?, ?, ?)";
        try (Connection conn = connect(); PreparedStatement pstmt = conn.prepareStatement(sql)) {
            pstmt.setString(1, luong.getMaNV());
            pstmt.setString(2, luong.getHoTen());
            pstmt.setString(3, luong.getChucVu());
            pstmt.setDouble(4, luong.getTongGio());
            pstmt.setDouble(5, luong.getSoCa());
            pstmt.setDouble(6, luong.getLuongCoBan());
            pstmt.setDouble(7, luong.getThucNhan());
            pstmt.executeUpdate();
            return true;
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }

    private boolean updateLuong(Luong luong) {
        String sql = "UPDATE Luong SET hoTen = ?, chucVu = ?, tongGio = ?, soCa = ?, luongCoBan = ?, thucNhan = ? WHERE maNV = ?";
        try (Connection conn = connect(); PreparedStatement pstmt = conn.prepareStatement(sql)) {
            pstmt.setString(1, luong.getHoTen());
            pstmt.setString(2, luong.getChucVu());
            pstmt.setDouble(3, luong.getTongGio());
            pstmt.setDouble(4, luong.getSoCa());
            pstmt.setDouble(5, luong.getLuongCoBan());
            pstmt.setDouble(6, luong.getThucNhan());
            pstmt.setString(7, luong.getMaNV());
            pstmt.executeUpdate();
            return true;
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }

    private boolean deleteLuong(String maNV) {
        String sql = "DELETE FROM Luong WHERE maNV = ?";
        try (Connection conn = connect(); PreparedStatement pstmt = conn.prepareStatement(sql)) {
            pstmt.setString(1, maNV);
            pstmt.executeUpdate();
            return true;
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        lb_DanhMuc = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        cbboxChucVu = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cbboxLuong = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_BangLuong = new javax.swing.JTable();
        btn_themLuong = new javax.swing.JButton();
        btn_SuaLuong = new javax.swing.JButton();
        btn_XoaLuong = new javax.swing.JButton();
        btn_LuuLuong = new javax.swing.JButton();
        lblLuong = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lb_DanhMuc.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lb_DanhMuc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_DanhMuc.setText("Danh mục :");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bảng lương", "Lịch làm", "Ứng lương ", "Bảng phạt" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lb_DanhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 447, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_DanhMuc)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Bảng lương");

        jLabel2.setText("Mã Nhân Viên:");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Lương cơ bản:");

        jLabel4.setText("Chức vụ:");

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        cbboxChucVu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Chọn chức vụ --", "Nhân Viên", "Quản lý" }));
        cbboxChucVu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbboxChucVuActionPerformed(evt);
            }
        });

        jLabel5.setText("Giờ làm:");

        cbboxLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbboxLuongActionPerformed(evt);
            }
        });

        tbl_BangLuong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Nhân Viên", "Họ Và Tên", "Chức vụ", "Giờ Làm", "Số Ca Làm", "Lương Cơ Bản", "Thực Nhận"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbl_BangLuong);
        if (tbl_BangLuong.getColumnModel().getColumnCount() > 0) {
            tbl_BangLuong.getColumnModel().getColumn(4).setResizable(false);
        }

        btn_themLuong.setText("Thêm");
        btn_themLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_themLuongActionPerformed(evt);
            }
        });

        btn_SuaLuong.setText("Sửa");
        btn_SuaLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SuaLuongActionPerformed(evt);
            }
        });

        btn_XoaLuong.setText("Xóa");
        btn_XoaLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_XoaLuongActionPerformed(evt);
            }
        });

        btn_LuuLuong.setText("Lưu");
        btn_LuuLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LuuLuongActionPerformed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel6.setText("Tên Nhân Viên:");

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jLabel7.setText("Ca làm:");

        jMenu1.setText("Trang chủ");

        jMenuItem1.setText("Quay lại Trang chủ");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(291, 291, 291))
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 687, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(15, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(lblLuong))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cbboxChucVu, 0, 230, Short.MAX_VALUE)
                                .addComponent(cbboxLuong, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(btn_themLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_SuaLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_XoaLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_LuuLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbboxChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbboxLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblLuong)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_themLuong)
                    .addComponent(btn_SuaLuong)
                    .addComponent(btn_XoaLuong)
                    .addComponent(btn_LuuLuong))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void cbboxChucVuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbboxChucVuActionPerformed
        cbboxLuong.setEnabled(true);
        cbboxLuong.setVisible(true);
        lblLuong.setVisible(true);

        String[] items = new String[]{};
        int selectedIndex = cbboxChucVu.getSelectedIndex();
        if (selectedIndex == 1) { // Nhân viên
            items = new String[]{"18000 VND/giờ", "20000 VND/giờ", "-- Nhập lương khác --"};
            cbboxLuong.setModel(new DefaultComboBoxModel<>(items));
        } else if (selectedIndex == 2) { // Quản lý
            items = new String[]{"25000 VND/giờ", "30000 VND/giờ", "-- Nhập lương khác --"};
            cbboxLuong.setModel(new DefaultComboBoxModel<>(items));
        } else {
            cbboxLuong.setModel(new DefaultComboBoxModel<>(items));
            cbboxLuong.setEnabled(false);
            cbboxLuong.setVisible(false);
            lblLuong.setVisible(false);
        }
    }//GEN-LAST:event_cbboxChucVuActionPerformed

    private void btn_themLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_themLuongActionPerformed
 try {
            String maNV = jTextField1.getText().trim();
            String hoTen = jTextField2.getText().trim();
            String chucVu = cbboxChucVu.getSelectedItem() != null ? cbboxChucVu.getSelectedItem().toString() : "";
            String gioText = jTextField3.getText().trim();
            String soCaText = jTextField4.getText().trim();

            if (maNV.isEmpty() || hoTen.isEmpty() || chucVu.isEmpty() || gioText.isEmpty() || soCaText.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin");
                return;
            }

            double tongGio = Double.parseDouble(gioText);
            double soCa = Double.parseDouble(soCaText);
            String luongStr = cbboxLuong.getSelectedItem().toString().replace(",", "").replaceAll("[^\\d]", "");
            double luongCoBan = Double.parseDouble(luongStr);
            double thucNhan = tongGio * luongCoBan;

            Luong luong = new Luong();
            luong.setMaNV(maNV);
            luong.setHoTen(hoTen);
            luong.setChucVu(chucVu);
            luong.setTongGio(tongGio);
            luong.setSoCa((int) soCa);
            luong.setLuongCoBan(luongCoBan);
            luong.setThucNhan(thucNhan);

            if (addLuong(luong)) {
                loadData();
                JOptionPane.showMessageDialog(this, "Thêm lương thành công!");
            } else {
                JOptionPane.showMessageDialog(this, "Thêm lương thất bại! Có thể mã nhân viên đã tồn tại.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đúng định dạng số cho giờ làm và số ca.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi thêm lương: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_themLuongActionPerformed

    private void btn_SuaLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SuaLuongActionPerformed
        int row = tbl_BangLuong.getSelectedRow();
        if (row >= 0) {
            try {
                String maNV = jTextField1.getText();
                String hoTen = jTextField2.getText();
                String chucVu = cbboxChucVu.getSelectedItem().toString();
                double tongGio = Double.parseDouble(jTextField3.getText());
                double soCa = Double.parseDouble(jTextField4.getText());
                String luongStr = cbboxLuong.getSelectedItem().toString().replace(",", "").replaceAll("[^\\d]", "");
                double luongCoBan = Double.parseDouble(luongStr);
                double thucNhan = tongGio * luongCoBan;

                Luong luong = new Luong();
                luong.setMaNV(maNV);
                luong.setHoTen(hoTen);
                luong.setChucVu(chucVu);
                luong.setTongGio(tongGio);
                luong.setSoCa((int) soCa);
                luong.setLuongCoBan(luongCoBan);
                luong.setThucNhan(thucNhan);

                if (updateLuong(luong)) {
                    loadData();
                    JOptionPane.showMessageDialog(this, "Cập nhật lương thành công!");
                } else {
                    JOptionPane.showMessageDialog(this, "Cập nhật lương thất bại!");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Lỗi nhập dữ liệu: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn dòng để sửa.");
        }
    }//GEN-LAST:event_btn_SuaLuongActionPerformed

    private void btn_XoaLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_XoaLuongActionPerformed
    int row = tbl_BangLuong.getSelectedRow();
    if (row >= 0) {
        DefaultTableModel model = (DefaultTableModel) tbl_BangLuong.getModel();
        String maNV = model.getValueAt(row, 0).toString();

        if (deleteLuong(maNV)) {
            model.removeRow(row);
            JOptionPane.showMessageDialog(this, "Xóa thành công!");
        } else {
            JOptionPane.showMessageDialog(this, "Xóa thất bại!");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn dòng để xóa.");
    }
    }//GEN-LAST:event_btn_XoaLuongActionPerformed

    private void btn_LuuLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LuuLuongActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int option = fileChooser.showSaveDialog(this);
        if (option == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try (BufferedWriter writer = new BufferedWriter(new FileWriter(file))) {
                DefaultTableModel model = (DefaultTableModel) tbl_BangLuong.getModel();
                for (int i = 0; i < model.getRowCount(); i++) {
                    for (int j = 0; j < model.getColumnCount(); j++) {
                        writer.write(model.getValueAt(i, j).toString());
                        if (j < model.getColumnCount() - 1) {
                            writer.write(",");
                        }
                    }
                    writer.newLine();
                }
                JOptionPane.showMessageDialog(this, "Lưu file thành công!");
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Lỗi lưu file: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btn_LuuLuongActionPerformed

    private void cbboxLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbboxLuongActionPerformed
        Object selected = cbboxLuong.getSelectedItem();
        if (selected != null && selected.toString().equals("-- Nhập lương khác --")) {
            String input = JOptionPane.showInputDialog(this, "Nhập số lương cơ bản theo giờ (vd: 20000):");
            if (input != null && input.matches("\\d+")) {
                String newLuong = input + " VND/giờ";

                DefaultComboBoxModel<String> model = (DefaultComboBoxModel<String>) cbboxLuong.getModel();
                model.insertElementAt(newLuong, model.getSize() - 1);
                cbboxLuong.setSelectedItem(newLuong);
            } else {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đúng định dạng số.");
                cbboxLuong.setSelectedIndex(0); // reset chọn
            }
        }
    }//GEN-LAST:event_cbboxLuongActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BangLuong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BangLuong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BangLuong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BangLuong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BangLuong().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_LuuLuong;
    private javax.swing.JButton btn_SuaLuong;
    private javax.swing.JButton btn_XoaLuong;
    private javax.swing.JButton btn_themLuong;
    private javax.swing.JComboBox<String> cbboxChucVu;
    private javax.swing.JComboBox<String> cbboxLuong;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JLabel lb_DanhMuc;
    private javax.swing.JLabel lblLuong;
    private javax.swing.JTable tbl_BangLuong;
    // End of variables declaration//GEN-END:variables

}

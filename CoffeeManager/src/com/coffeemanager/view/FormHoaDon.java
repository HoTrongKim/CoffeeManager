/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.coffeemanager.view;

import com.coffeemanager.model.Connect;
import com.coffeemanager.model.Products;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Yuu
 */
public class FormHoaDon extends javax.swing.JFrame {

    private String chucVu;

    /**
     * Creates new form HoaDon
     */
    public FormHoaDon(String chucVu) {
        this.chucVu = chucVu;
        initComponents(); // Initialize UI components
        loadSanPhamVaoBang(); // Load product list into table
        loadSanPhamVaoChoice(); // Load product list into dropdown
        setupTableSelectionListener(); // Enable click-to-select logic
        setupChoiceSelectionListener(); // Enable choice-to-table sync
        txt_TongTienHoaDon.setEditable(false); // Disable manual editing
        setLocationRelativeTo(null); // Đặt form ở giữa màn hình
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbl_ChiTietHoaDon = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        txt_TongTienHoaDon = new javax.swing.JTextField();
        btn_ThanhToan = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btn_xoa1 = new javax.swing.JButton();
        btn_xoaAllHoaDon = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_DSSanPham = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        choice_SanPhamVaGiaTien = new java.awt.Choice();
        btn_themSPVaoHoaDon = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel5.setText("HÓA ĐƠN");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true)));

        jLabel2.setText("Chi Tiết Hóa Đơn");

        tbl_ChiTietHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên Sản Phẩm", "Số Lượng", "Giá Tiền", "Tổng Tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tbl_ChiTietHoaDon);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        txt_TongTienHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_TongTienHoaDonActionPerformed(evt);
            }
        });

        btn_ThanhToan.setText("Thanh Toán");
        btn_ThanhToan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_ThanhToan.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_ThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThanhToanActionPerformed(evt);
            }
        });

        jLabel3.setText("Thành Tiền");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_ThanhToan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_TongTienHoaDon, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_TongTienHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_ThanhToan)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btn_xoa1.setText("Xóa");
        btn_xoa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xoa1ActionPerformed(evt);
            }
        });

        btn_xoaAllHoaDon.setText("Xóa All");
        btn_xoaAllHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xoaAllHoaDonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_xoaAllHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_xoa1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btn_xoa1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_xoaAllHoaDon)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Danh Sách Sản Phẩm");

        tbl_DSSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tên Sản Phẩm", "Giá Tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbl_DSSanPham);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btn_themSPVaoHoaDon.setText("Thêm Sản Phẩm Vào Hóa Đơn");
        btn_themSPVaoHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_themSPVaoHoaDonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(choice_SanPhamVaGiaTien, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(btn_themSPVaoHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(choice_SanPhamVaGiaTien, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_themSPVaoHoaDon))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(447, 447, 447)
                        .addComponent(jLabel5)))
                .addContainerGap(34, Short.MAX_VALUE))
            .addComponent(jSeparator1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void loadSanPhamVaoBang() {
        Connect sq = new Connect();
        DefaultTableModel tblModel = (DefaultTableModel) tbl_DSSanPham.getModel();
        tblModel.setRowCount(0);
        List<Products> userList = sq.SelectAll();
        for (Products user : userList) {
            if (user != null) {
                tblModel.addRow(new Object[]{user.getProduct_id(), user.getName(), user.getPrice()});
            }
        }
    }

    public void loadSanPhamVaoChoice() {
        Connect sq = new Connect();
        choice_SanPhamVaGiaTien.removeAll(); // Xóa các mục hiện có
        List<Products> userList = sq.SelectAll();
        for (Products user : userList) {
            if (user != null) {
                String item = user.getName() + " - " + String.format("%.0f", user.getPrice());
                choice_SanPhamVaGiaTien.add(item);
            }
        }
    }

    private void setupTableSelectionListener() {
        tbl_DSSanPham.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) { // Tránh xử lý nhiều lần
                    int selectedRow = tbl_DSSanPham.getSelectedRow();
                    if (selectedRow != -1) {
                        String tenSanPham = tbl_DSSanPham.getValueAt(selectedRow, 1).toString();
                        double giaTien = Double.parseDouble(tbl_DSSanPham.getValueAt(selectedRow, 2).toString());
                        String item = tenSanPham + " - " + String.format("%.0f", giaTien);
                        for (int i = 0; i < choice_SanPhamVaGiaTien.getItemCount(); i++) {
                            if (choice_SanPhamVaGiaTien.getItem(i).equals(item)) {
                                choice_SanPhamVaGiaTien.select(i);
                                break;
                            }
                        }
                    }
                }
            }
        });
    }

    private void setupChoiceSelectionListener() {
        choice_SanPhamVaGiaTien.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    String selectedItem = choice_SanPhamVaGiaTien.getSelectedItem();
                    if (selectedItem != null) {
                        DefaultTableModel model = (DefaultTableModel) tbl_DSSanPham.getModel();
                        for (int i = 0; i < model.getRowCount(); i++) {
                            String tenSanPham = model.getValueAt(i, 1).toString();
                            double giaTien = Double.parseDouble(model.getValueAt(i, 2).toString());
                            String item = tenSanPham + " - " + String.format("%.0f", giaTien);
                            if (item.equals(selectedItem)) {
                                tbl_DSSanPham.setRowSelectionInterval(i, i);
                                tbl_DSSanPham.scrollRectToVisible(tbl_DSSanPham.getCellRect(i, 0, true));
                                break;
                            }
                        }
                    }
                }
            }
        });
    }

    private void updateTongTienHoaDon() {
        DefaultTableModel model = (DefaultTableModel) tbl_ChiTietHoaDon.getModel();
        double tong = 0;

        for (int i = 0; i < model.getRowCount(); i++) {
            tong += Double.parseDouble(model.getValueAt(i, 3).toString());
        }

        txt_TongTienHoaDon.setText(String.format("%.0f", tong));
    }


    private void btn_themSPVaoHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_themSPVaoHoaDonActionPerformed
        String selectedItem = choice_SanPhamVaGiaTien.getSelectedItem();
        if (selectedItem == null) {
            javax.swing.JOptionPane.showMessageDialog(this, "Vui lòng chọn một sản phẩm từ danh sách!");
            return;
        }

        // Tách tên sản phẩm và giá tiền từ chuỗi
        String[] parts = selectedItem.split(" - ");
        if (parts.length != 2) {
            javax.swing.JOptionPane.showMessageDialog(this, "Dữ liệu sản phẩm không hợp lệ!");
            return;
        }
        String tenSanPham = parts[0];
        double giaTien;
        try {
            giaTien = Double.parseDouble(parts[1]);
        } catch (NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Giá tiền không hợp lệ!");
            return;
        }

        String input = javax.swing.JOptionPane.showInputDialog(this, "Nhập số lượng:");
        if (input == null) {
            return; // Nhấn Cancel
        }
        int soLuong;
        try {
            soLuong = Integer.parseInt(input);
            if (soLuong <= 0) {
                javax.swing.JOptionPane.showMessageDialog(this, "Số lượng phải lớn hơn 0!");
                return;
            }
        } catch (NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Vui lòng nhập số hợp lệ!");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tbl_ChiTietHoaDon.getModel();

        // Kiểm tra xem sản phẩm đã có trong hóa đơn chưa
        for (int i = 0; i < model.getRowCount(); i++) {
            String tenSPTrongHD = (String) model.getValueAt(i, 0);
            if (tenSPTrongHD.equals(tenSanPham)) {
                // Cộng dồn số lượng
                int soLuongCu = (Integer) model.getValueAt(i, 1);
                int soLuongMoi = soLuongCu + soLuong;
                double tongTienMoi = giaTien * soLuongMoi;
                model.setValueAt(soLuongMoi, i, 1); // Cập nhật số lượng
                model.setValueAt(tongTienMoi, i, 3); // Cập nhật tổng tiền
                updateTongTienHoaDon();
                return;
            }
        }

        // Nếu sản phẩm chưa có, thêm dòng mới
        double tongTien = giaTien * soLuong;
        model.addRow(new Object[]{tenSanPham, soLuong, giaTien, tongTien});

        // Cập nhật tổng tiền hóa đơn
        updateTongTienHoaDon();
    }//GEN-LAST:event_btn_themSPVaoHoaDonActionPerformed

    private void btn_ThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ThanhToanActionPerformed
        // Lấy model của bảng chi tiết hóa đơn
        DefaultTableModel model = (DefaultTableModel) tbl_ChiTietHoaDon.getModel();

        // Kiểm tra nếu không có sản phẩm nào
        if (model.getRowCount() == 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Hóa đơn trống! Vui lòng thêm sản phẩm.");
            return;
        }

        // Lấy tổng tiền từ text field
        double tongTien;
        try {
            tongTien = Double.parseDouble(txt_TongTienHoaDon.getText());
        } catch (NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Tổng tiền không hợp lệ!");
            return;
        }

        // Lấy ngày và giờ hiện tại từ hệ thống
        java.time.LocalDateTime now = java.time.LocalDateTime.now();
        String ngayTao = now.format(java.time.format.DateTimeFormatter.ofPattern("yyyy-MM-dd"));
        String gioTao = now.format(java.time.format.DateTimeFormatter.ofPattern("HH:mm:ss"));

        Connection conn = null;
        java.sql.PreparedStatement pstmtHoaDon = null;
        java.sql.PreparedStatement pstmtChiTiet = null;
        ResultSet generatedKeys = null;

        try {
            // Kết nối database
            conn = new Connect().connect();
            conn.setAutoCommit(false); // Bắt đầu transaction

            // Thêm vào bảng DanhSachHoaDon
            String sqlHoaDon = "INSERT INTO DanhSachHoaDon (ngayTao, gioTao, tongTien) VALUES (?, ?, ?)";
            pstmtHoaDon = conn.prepareStatement(sqlHoaDon, Statement.RETURN_GENERATED_KEYS);
            pstmtHoaDon.setString(1, ngayTao);
            pstmtHoaDon.setString(2, gioTao);
            pstmtHoaDon.setDouble(3, tongTien);
            pstmtHoaDon.executeUpdate();

            // Lấy mã hóa đơn vừa tạo
            generatedKeys = pstmtHoaDon.getGeneratedKeys();
            int maHD = -1;
            if (generatedKeys.next()) {
                maHD = generatedKeys.getInt(1);
            } else {
                throw new SQLException("Tạo hóa đơn thất bại!");
            }

            // Thêm vào bảng ChiTietHoaDon
            String sqlChiTiet = "INSERT INTO ChiTietHoaDon (maHD, tenSanPham, soLuong, donGia) VALUES (?, ?, ?, ?)";
            pstmtChiTiet = conn.prepareStatement(sqlChiTiet);

            for (int i = 0; i < model.getRowCount(); i++) {
                String tenSP = (String) model.getValueAt(i, 0);
                int soLuong = (Integer) model.getValueAt(i, 1);
                double donGia = (Double) model.getValueAt(i, 2);

                pstmtChiTiet.setInt(1, maHD);
                pstmtChiTiet.setString(2, tenSP);
                pstmtChiTiet.setInt(3, soLuong);
                pstmtChiTiet.setDouble(4, donGia);
                pstmtChiTiet.addBatch(); // Thêm vào batch
            }

            // Thực thi batch insert
            pstmtChiTiet.executeBatch();

            // Commit transaction
            conn.commit();

            // Thông báo thành công
            javax.swing.JOptionPane.showMessageDialog(this, "Thanh toán thành công! Mã HD: " + maHD);

            // Xóa dữ liệu sau khi thanh toán
            model.setRowCount(0);
            txt_TongTienHoaDon.setText("0");

        } catch (SQLException ex) {
            // Rollback transaction nếu có lỗi
            if (conn != null) {
                try {
                    conn.rollback();
                } catch (SQLException ex1) {
                    ex1.printStackTrace();
                }
            }
            javax.swing.JOptionPane.showMessageDialog(this, "Lỗi: " + ex.getMessage());
            ex.printStackTrace();
        } finally {
            // Đóng kết nối
            try {
                if (generatedKeys != null) {
                    generatedKeys.close();
                }
                if (pstmtHoaDon != null) {
                    pstmtHoaDon.close();
                }
                if (pstmtChiTiet != null) {
                    pstmtChiTiet.close();
                }
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }

    }//GEN-LAST:event_btn_ThanhToanActionPerformed

    private void btn_xoaAllHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xoaAllHoaDonActionPerformed
        DefaultTableModel model = (DefaultTableModel) tbl_ChiTietHoaDon.getModel();
        model.setRowCount(0);
        txt_TongTienHoaDon.setText("0");
    }//GEN-LAST:event_btn_xoaAllHoaDonActionPerformed

    private void btn_xoa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xoa1ActionPerformed
        int selectedRow = tbl_ChiTietHoaDon.getSelectedRow();
        if (selectedRow == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Vui lòng chọn một sản phẩm trong hóa đơn để xóa!");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tbl_ChiTietHoaDon.getModel();
        model.removeRow(selectedRow);
        updateTongTienHoaDon();
    }//GEN-LAST:event_btn_xoa1ActionPerformed

    private void txt_TongTienHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_TongTienHoaDonActionPerformed

    }//GEN-LAST:event_txt_TongTienHoaDonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_ThanhToan;
    private javax.swing.JButton btn_themSPVaoHoaDon;
    private javax.swing.JButton btn_xoa1;
    private javax.swing.JButton btn_xoaAllHoaDon;
    private java.awt.Choice choice_SanPhamVaGiaTien;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tbl_ChiTietHoaDon;
    private javax.swing.JTable tbl_DSSanPham;
    private javax.swing.JTextField txt_TongTienHoaDon;
    // End of variables declaration//GEN-END:variables

}
